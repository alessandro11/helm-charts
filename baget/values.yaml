# Default values for baget.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: loicsharma/baget
  tag: latest
  pullPolicy: Always # 'Always' when tag is 'latest'

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  ## Kubernetes svc type
  ## For minikube, set this to NodePort
  type: ClusterIP
  port: 80
  url: my-fqdn.example

ingress:
  enabled: true
  class: nginx
  annotations:
    kubernetes.io/tls-acme: "false"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  ## This volume persists the database about uploaded packages
  bagetData:
    enabled: true
    size: 2Gi
    accessMode: ReadWriteOnce
  ## This volume is used to store nuget packages
  bagetPackages:
    enabled: false
    size: 10Gi
    accessMode: ReadWriteOnce

# if blank (default) no API key is required to publish NuGet packages
apiKey: ""

# TODO:
#      Add support to either local storage or S3
# at the moment deployment supports only S3
#
# where the NuGet packages will be stored
# storage:
#   type: "FileSystem"
#   accountName: ""
#   container: ""
#   accessKey: ""
#   path: "/var/baget-packages"

storage:
  type: "AwsS3"
  region: ""
  bucket: ""

# where the package index is saved
database:
  type: "Sqlite"
  connectionString: "Data Source=/var/baget-data/baget.db"

search:
  type: "Database"

secretsName: "my-secret-example-name"
